@{
    ViewData["Title"] = "JSViewComponents demo";
}

<script src="~/JSViewComponents.js" asp-append-version="true"></script>
<link href="~/JSViewComponents.css" rel="stylesheet" type="text/css" />

<h1>JSViewComponents demo</h1>

<p>
    Demo for <strong>JSViewComponents</strong>, an extension of standard ASP.NET Core View components
    which allows to easily create <strong>visual components with added JavaScript/TypeScript functionality for ASP.NET</strong> projects.
</p>

<p><a target="_blank" href="https://github.com/jordisan/JSViewComponents">JSViewComponents source code and more info at <strong>GitHub</strong></a></p>

<h2>Using generic JSViewComponents</h2>
<p>
    Components <strong>SingleItem</strong> showing data for a single alumn and a single course.
</p>
@{
    JSViewComponents.Components.SingleItem.SingleItemViewComponent alumnComponent =
        new JSViewComponents.Components.SingleItem.SingleItemViewComponent(
            "alumn",
            Alumn.SampleAlumns.First(),
            null
        );
}
<jsvc component="alumnComponent"></jsvc>

@{
    JSViewComponents.Components.SingleItem.SingleItemViewComponent courseComponent =
        new JSViewComponents.Components.SingleItem.SingleItemViewComponent(
            "course",
            Course.SampleCourses.First(),
            null
        );
}
<jsvc component="courseComponent"></jsvc>


<p>
    Two differents sets of data using same <strong>TableViewComponent</strong>, but with different CSS styles
    <span style="font-size: smaller;">(click on the headers to get sorted data).</span>
</p>
@{
    JSViewComponents.Components.Table.TableViewComponent alumnsTableComponent =
        new JSViewComponents.Components.Table.TableViewComponent(
            "alumns",
            Alumn.SampleAlumns,
            null,
            Url.Action("GetAll", "Alumn", null, Context.Request.Scheme)
        );
}
<jsvc component="alumnsTableComponent"></jsvc>

@{
    JSViewComponents.Components.Table.TableViewComponent coursesTableComponent =
        new JSViewComponents.Components.Table.TableViewComponent(
            "courses",
            Course.SampleCourses,
            null,
            Url.Action("GetAll", "Course", null, Context.Request.Scheme)
        );
}
<jsvc component="coursesTableComponent"></jsvc>

<h2>Extending JSViewComponents to create custom components</h2>

@{
    JSViewComponents.Demo.Views.Components.StudentReportCard.StudentReportCardViewComponent reportComponent =
        new JSViewComponents.Demo.Views.Components.StudentReportCard.StudentReportCardViewComponent(
            "report",
            Alumn.SampleAlumns,
            null
        );
}
<jsvc component="reportComponent"></jsvc>