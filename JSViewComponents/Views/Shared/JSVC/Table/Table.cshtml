@using JSViewComponents
@using JSViewComponents.JSVC.Table
@model TableViewComponent

@if (Model?.Data == null)
{
    <!-- NO DATA -->
}
else
{

    <table>
        <thead>
            <tr>
                @{
                    // Get headers from first item
                    object firstItem = Model.Data.FirstOrDefault();
                    var propAttrsDictHeader = firstItem.GetJsvcProperties();
                    foreach (System.Reflection.PropertyInfo prop in propAttrsDictHeader.Keys)
                    {
                        JsvcPropertyAttr attr = propAttrsDictHeader[prop].First();
                        <th class="@Model.NormalizeString(prop.Name)@(attr.Sortable?" sortable":"")" data-internal-name="@prop.Name">
                            @attr.Label
                        </th>
                    }
                }
            </tr>
        </thead>

        <tbody>
            @foreach (object item in Model.Data)
            {
                var propAttrsDict = item.GetJsvcProperties();
                <tr>
                    @foreach (System.Reflection.PropertyInfo prop in propAttrsDict.Keys)
                    {
                        <td class="@Model.NormalizeString(prop.Name)">
                            @prop.GetValue(item)
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>

}
